{"version":3,"sources":["components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/searchBox.jsx","services/fakeGenreService.js","services/fakeMovieService.js","utils/paginate.js","components/movies.jsx","components/common/input.jsx","components/common/selectOption.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","components/registerForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","onClick","label","key","Component","TableBody","renderCell","item","content","_","get","createKey","_id","data","Table","Like","classes","liked","aria-hidden","style","cursor","MoviesTable","movie","Link","to","title","onLike","onDelete","movies","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","genres","getGenres","filter","g","genre","numberInStock","dailyRentalRate","publishDate","saveMovie","movieInDb","find","m","genresAPI","genreId","Date","now","toString","push","paginate","pageNumber","startIndex","slice","take","Movies","state","searchQuery","selectedGenre","handleDelete","setState","handleLike","index","indexOf","console","log","handlePageChange","handleGenreSelect","handleSort","handleSearch","query","SearchQuery","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","moviesCount","Input","error","rest","htmlFor","id","SelectOption","numOfOptions","option","Form","errors","validate","result","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","renderButton","disabled","renderInput","renderSelectOption","MovieForm","string","required","max","number","integer","min","history","movieID","match","params","replace","mapToViewModel","onSubmit","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","LoginForm","username","password","RegistationForm","email","App","Fragment","Switch","Route","component","RegisterForm","Redirect","exact","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.c2e9c4ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TableHeader extends Component {\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {this.props.columns.map(column =>\r\n                        <th\r\n                            className=\"clickable\"\r\n                            key={column.path || column.key}\r\n                            onClick={() => this.raiseSort(column.path)}\r\n                        >\r\n                            {column.label} {this.renderSortIcon(column)}\r\n                        </th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n\r\n    raiseSort = path => {\r\n        const sortColumn = { ...this.props.sortColumn };\r\n\r\n        if (sortColumn.path === path) {\r\n            sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\r\n        }\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n\r\n        this.props.onSort(sortColumn);\r\n    };\r\n\r\n    renderSortIcon = column => {\r\n        const { sortColumn } = this.props;\r\n\r\n        if (column.path !== sortColumn.path) return null;\r\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\n        return <i className=\"fa fa-sort-desc\"></i>\r\n    };\r\n}\r\n\r\nexport default TableHeader;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TableBody extends Component {\r\n    render() {\r\n        const { data, columns } = this.props;\r\n\r\n        return (\r\n            <tbody>\r\n                {data.map(item =>\r\n                    <tr key={item._id}>\r\n                        {columns.map(column => <td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>)}\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        );\r\n    }\r\n\r\n    renderCell = (item, column) => {\r\n        if (column.content) return column.content(item);\r\n\r\n        return _.get(item, column.path)\r\n    };\r\n\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key);\r\n    };\r\n}\r\n\r\nexport default TableBody;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {   // Great way of not having to set the props value ... less code\r\n    return (\r\n        <table className=\"table\">\r\n            <TableHeader\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n\r\n            <TableBody\r\n                data={data}\r\n                columns={columns}\r\n            />\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\n\r\n// Look at the steps and memorize them ... 22 Solution ... Like component\r\n// Stateless Function Component\r\n    // Make sure to put props for a parameter and then get rid of this. on all props because this is a arrow function\r\n\r\nconst Like = (props) => {\r\n    let classes = \"fa fa-heart\";\r\n    if (!props.liked) classes += \"-o\";   // if false, add -o to the end\r\n\r\n    return (\r\n        <i\r\n            className={classes} aria-hidden=\"true\"\r\n            onClick={props.onClick}\r\n            style={{ cursor: \"pointer\" }}\r\n        ></i>\r\n    );\r\n}\r\n\r\nexport default Like;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from './common/table';\r\nimport Like from './common/like';\r\n\r\n\r\n// Good example of react code ... \r\n// Object destructuring for props.onSort\r\n// onClick onSort() passes an argument to whatever is calling the MoviesTable component\r\n// movies.jsx ... this is where the MoviesTable component is placed\r\n// It has the property onSort ... \r\n// This property is a reference to the correct function that needs to be ran ... \r\n// this.handleSort\r\n\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n        { path: 'title', label: 'Title', content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\r\n        { path: 'genre.name', label: 'Genre' },\r\n        { path: 'numberInStock', label: 'Stock' },\r\n        { path: 'dailyRentalRate', label: 'Rate' },\r\n        { key: 'like', content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} /> },\r\n        { key: 'delete', content: movie => <button className=\"btn btn-danger btn-sm\" onClick={() => this.props.onDelete(movie)} >X Delete</button> }\r\n    ];\r\n\r\n    render() {\r\n        const { movies, onSort, sortColumn } = this.props;\r\n\r\n        return (\r\n            <Table \r\n                columns={this.columns}\r\n                data={movies}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default MoviesTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';   // Small library that helps me check to see if the props value is the one I want. So no string value can be in place for an int, otherwise it will give me an error\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Pagination = props => {\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props;   // Sets the properties to what they should be from class Pagination\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);   // Display pages dynamically\r\n    if (pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount + 1);   // Display pages dynamically\r\n\r\n    return <nav>\r\n        <ul className=\"pagination\">\r\n            {pages.map(page =>\r\n                <li key={page} className={page === currentPage ? 'page-item active' : 'page-item'}>\r\n                    <a \r\n                        className=\"page-link\"\r\n                        onClick={() => onPageChange(page)}  // Double pass. This value is passed to the property onPageChange ... then passed to the function handlePageChange\r\n                    >{page}</a> \r\n                </li>)}\r\n\r\n        </ul>\r\n    </nav>\r\n};\r\n\r\nPagination.propTypes = {   // This is good to check for props bugs\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired, \r\n    onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ListGroup = (props) => {   // Properties of ListGroup which is called in movies.jsx\r\n    const { items, textProperty, valueProperty, onItemSelect, selectedItem } = props;   // items is the items props on ListGroup, so is the others. Different ways of writing these destructering values\r\n    //  ^value Property has the same value ... _id ... as getGenres() so this is what you have to do ...\r\n    return (\r\n        <ul className=\"list-group\">         { /* code to get correct value ^ */}\r\n            { items.map(item => <li key={item[valueProperty]} className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"} onClick={() => onItemSelect(item)}>{item[textProperty]}</li>)}\r\n        </ul>\r\n    );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n    textProperty: 'name',\r\n    valueProperty: '_id'\r\n};\r\n\r\nexport default ListGroup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n// this one is not very usable ... have to do a lot of configuring in the main .jsx file\r\n\r\n\r\n\r\n\r\nconst SearchBox = ({ value, onChange }) => {   // parameters are properties\r\n    return (\r\n        <input \r\n            type=\"text\"\r\n            name=\"query\"\r\n            className=\"form-control my-3\"\r\n            placeholder=\"Search...\"\r\n            value={value}\r\n            onChange={e => onChange(e.currentTarget.value)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items)\r\n        .slice(startIndex)\r\n        .take(pageSize)\r\n        .value();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport MoviesTable from './moviesTable';\r\nimport Pagination from './common/pagination';\r\nimport ListGroup from './common/listGroup';\r\nimport SearchBox from './common/searchBox';\r\nimport { Link } from 'react-router-dom';\r\nimport { getMovies } from '../services/fakeMovieService';\r\nimport { getGenres } from '../services/fakeGenreService';\r\nimport { paginate } from '../utils/paginate';\r\nimport _ from 'lodash';\r\n\r\nclass Movies extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres: [],\r\n        pageSize: 4,\r\n        searchQuery: '',\r\n        selectedGenre: null,\r\n        currentPage: 1,\r\n        sortColumn: { path: 'title', order: 'asc' }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const genres = [{ _id: '', name: 'All Genres' }, ...getGenres()]\r\n\r\n        this.setState({ movies: getMovies(), genres: genres });\r\n    }\r\n\r\n    render() {\r\n        const { length: moviesCount } = this.state.movies;\r\n        const { sortColumn, searchQuery } = this.state;\r\n\r\n        if (moviesCount === 0) return <p>There are no movies in the database.</p>;\r\n\r\n        const { totalCount, data: movies } = this.getPageData();\r\n\r\n        return (\r\n            <div className=\"row\">   { /* This is basically React.Fragment */}\r\n                <div className=\"col-3 text-center\">\r\n                    <ListGroup\r\n                        items={this.state.genres}\r\n                        selectedItem={this.state.selectedGenre}\r\n                        onItemSelect={this.handleGenreSelect}\r\n                    />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <Link\r\n                        to=\"/movies/new\"\r\n                        className=\"btn btn-primary mb-3\"\r\n                    >New Movie</Link>\r\n                    <p>Showing {totalCount} movies in the database.</p>\r\n\r\n                    <SearchBox \r\n                        value={searchQuery}\r\n                        onChange={this.handleSearch}\r\n                    />\r\n\r\n                    <MoviesTable\r\n                        movies={movies}\r\n                        sortColumn={sortColumn}\r\n                        onLike={this.handleLike}\r\n                        onDelete={this.handleDelete}\r\n                        onSort={this.handleSort}\r\n                    />\r\n                    <Pagination\r\n                        itemsCount={totalCount}\r\n                        pageSize={this.state.pageSize}\r\n                        currentPage={this.state.currentPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );                  // !!! Notice how all these components are making references to the functions below ... This is where they handle everything... \r\n        // Like a parent handling stuff for their kids ... \r\n        // movies is the parent class/component ... while moviesTable is the child class/component\r\n    }\r\n\r\n    handleDelete = movie => {   // Not good to update the state object directly\r\n        const movies = this.state.movies.filter(key => key._id !== movie._id);   // return all indexes that does not have this ID. So when clicked, it will return all objects besides the one that the user clicked on(the clicked on one is for deleting it)\r\n        this.setState({ movies: movies });\r\n    }\r\n\r\n    handleLike = movie => {   // This is 1 movie object from the array movies\r\n        const movies = [...this.state.movies];   // This is copying the entire array of movie objects over from fakeMovieRental.js\r\n        const index = movies.indexOf(movie);   // This is checking to see where the index of this object is located in the movies array\r\n        movies[index] = { ...movies[index] };\r\n        console.log(movies[index]);\r\n        movies[index].liked = !movies[index].liked;   // Flip flops true and false in order to change the heart icon\r\n        this.setState({ movies: movies });\r\n    };\r\n\r\n    handlePageChange = page => {\r\n        this.setState({ currentPage: page });\r\n    };\r\n\r\n    handleGenreSelect = genre => {\r\n        this.setState({ selectedGenre: genre, currentPage: 1 });   // currentPage: 1 fixes the problem of clicking next page on \"All Genres\", and then clicking Action, comedy, or thriller will not display anything\r\n    };\r\n\r\n    handleSort = sortColumn => {\r\n        this.setState({ sortColumn });\r\n    };\r\n\r\n    handleSearch = query => {\r\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 })\r\n    };\r\n    \r\n    handleGenreSelect = genre => {\r\n        this.setState({ selectedGenre: genre, SearchQuery: '', currentPage: 1 })\r\n    };\r\n\r\n    getPageData = () => {\r\n        const { pageSize, currentPage, sortColumn, selectedGenre, searchQuery, movies: allMovies } = this.state;\r\n\r\n        let filtered = allMovies;\r\n        if (searchQuery) {\r\n            filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()))\r\n        } else\r\n        if (selectedGenre && selectedGenre._id) {\r\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n        }\r\n\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n        return { totalCount: filtered.length, data: movies };\r\n    };\r\n}\r\n\r\nexport default Movies;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const filtered = this.state.selectedGenre && this.state.selectedGenre._id ? this.state.movies.filter(m => m.genre._id === this.state.selectedGenre._id) : this.state.movies;\r\n//         const sorted = _.orderBy(filtered, [this.state.sortColumn.path], [this.state.sortColumn.order]);\r\n//         const movies = paginate(sorted, this.state.currentPage, this.state.pageSize);\r\n//         return { totalCount: filtered.length, data: movies };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {   // This is desctructuring props ... do not have to use props.name\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                {...rest}\r\n                name={name}\r\n                id={name}\r\n                className=\"form-control\"\r\n            />\r\n            { error && <div className=\"alert alert-danger\">{error}</div>}   {/* if error is truthy ... it will return this markup */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SelectOption = ({ name, label, numOfOptions, error, ...rest }) => {   // numOfOptions is all the genre objects\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select className=\"form-control\" name={name} id={name} {...rest}>\r\n                <option value=\"\" />\r\n                {numOfOptions.map(option => {\r\n                    return (\r\n                        <option key={option._id} value={option._id}>\r\n                            {option.name}\r\n                        </option>\r\n                    );\r\n\r\n                })}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectOption;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Input from './input';\r\nimport SelectOption from './selectOption';\r\nimport Joi from 'joi-browser';\r\n\r\n\r\n\r\n\r\n// Completely reusable ... make class extend this class\r\n// Go to loginForm.jsx and especially registerForm.jsx to know what to change\r\n\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        data: {},\r\n        errors: {}\r\n    };\r\n\r\n    validate = () => {\r\n        const result = Joi.validate(this.state.data, this.schema, { abortEarly: false });\r\n\r\n        if (!result.error) return null;   // if there is no error, return null\r\n\r\n        const errors = {};\r\n        for (let item of result.error.details) {\r\n            errors[item.path[0]] = item.message;\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();   // This gets rid of the form auto submitting to the server and having to make an HTTP request to reload\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });   // errors object was setting to null and getting an error, it needs to be set to an object so that is why the || statement is there\r\n        if (errors) return;   // if there are errors, the server will not be called\r\n\r\n        this.doSubmit();   // Go to function to change needs\r\n    };\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = { ...this.state.errors }\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;   // Handles multiple input values so that the state can be set dynamically ... it's binded\r\n        this.setState({ data, errors });\r\n    };\r\n\r\n    renderButton = label => {\r\n        return (\r\n            <button\r\n                disabled={this.validate()}\r\n                className=\"btn btn-primary\"\r\n            >{label}\r\n            </button>\r\n        );\r\n\r\n    };\r\n\r\n    renderInput = (name, label, type = 'text') => {   // type is set to the default value of 'text'\r\n        const { data, errors } = this.state;\r\n\r\n        return (\r\n            <Input\r\n                name={name}\r\n                label={label}\r\n                error={errors[name]}\r\n                // The rest of the values will be passed to the ...rest parameter\r\n                type={type}\r\n                value={data[name]}   // Dot notation does not work\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderSelectOption = (name, label, numOfOptions) => {   // numOfOptions is really all of the genre objects\r\n        const { data, errors } = this.state;\r\n\r\n        return (\r\n            <SelectOption \r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                numOfOptions={numOfOptions}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        );\r\n    };\r\n} // end of Form\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getMovie, saveMovie } from '../services/fakeMovieService';\r\nimport { getGenres } from '../services/fakeGenreService';\r\n\r\n\r\n\r\n\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: { title: '', genreId: '', numberInStock: '', dailyRentalRate: '' },\r\n        genres: [],\r\n        errors: {}\r\n    };\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()   // these properties have to be named the same name as in fakeMovieService\r\n            .required()\r\n            .max(30)\r\n            .label('Title'),\r\n        genreId: Joi.string()\r\n            .required()\r\n            .label('Genre'),\r\n        numberInStock: Joi.number()\r\n            .required()\r\n            .integer()\r\n            .min(0)\r\n            .max(100)\r\n            .label('Number in Stock'),\r\n        dailyRentalRate: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(10)\r\n            .label('Rate')\r\n    };\r\n\r\n    componentDidMount() {\r\n        const genres = getGenres();\r\n        this.setState({ genres });   // this state is set to all the genres in fakeGenreService\r\n\r\n        const movieID = this.props.match.params.id;\r\n        if (movieID === 'new') return;\r\n\r\n        const movie = getMovie(movieID);\r\n        if (!movie) return this.props.history.replace('/not-found');\r\n\r\n        this.setState({ data: this.mapToViewModel(movie) });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('title', 'Title')}\r\n                    {this.renderSelectOption('genreId', 'Genre', this.state.genres)}\r\n                    {this.renderInput('numberInStock', 'Number in Stock')}\r\n                    {this.renderInput('dailyRentalRate', 'Rate')}\r\n                    {this.renderButton('Save')}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    doSubmit = () => {\r\n        saveMovie(this.state.data);\r\n\r\n        this.props.history.push('/movies');\r\n    };\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        };\r\n    }\r\n}\r\n\r\nexport default MovieForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Customers = () => {\r\n    return (\r\n        <h1>Customers</h1>\r\n    );\r\n}\r\n\r\nexport default Customers;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Rentals = () => {\r\n    return (\r\n        <h1>Rentals</h1>\r\n    );\r\n};\r\n\r\nexport default Rentals\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>Not Found</h1>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n                Vidly\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/movies\">\r\n                            Movies\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/customers\">\r\n                            Customers\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/rentals\">\r\n                            Rentals\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/login\">\r\n                            Login\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/registerForm\">\r\n                            Register\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Form from './common/form';\r\nimport Joi from 'joi-browser';\r\n\r\n\r\n// Areas marked with !!! means to change based on needs\r\n\r\n\r\nclass LoginForm extends Form {   // extend class Form and not Component\r\n    state = {   // !!! initialize the state to match needs\r\n        data: { username: '', password: '' },\r\n        errors: {}\r\n    };\r\n    schema = {   // !!! change based on needs\r\n        username: Joi.string().required().label('Username'),\r\n        password: Joi.string().required().label('Password')\r\n    };\r\n\r\n    render() {   // !!! change what to render\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('username', 'Username')}   {/* name of prop, label for the input */}\r\n                    {this.renderInput('password', 'Password', 'password')} {/* the third param is an actual prop ... so password means that when typing, it will only display dots */}\r\n                    {this.renderButton('Login')}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    doSubmit = () => {   // !!! Determine what happens in this function\r\n        // Call the server\r\n        console.log('Submitted');\r\n    };\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass RegistationForm extends Form {\r\n    state = {\r\n        data: { username: '', password: '', name: '' },\r\n        errors: {}\r\n    };\r\n    schema = {\r\n        username: Joi.string()\r\n            .required()\r\n            .email()\r\n            .label('Username'),\r\n        password: Joi.string()\r\n            .required()\r\n            .min(5)\r\n            .label('Password'),\r\n        name: Joi.string()\r\n            .required()\r\n            .label('Name')\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Register</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('username', 'Username')}   {/* not a good idea to use email input here. It won't display warnings dynamically */}\r\n                    {this.renderInput('password', 'Password', 'password')}\r\n                    {this.renderInput('name', 'Name')}\r\n                    {this.renderButton('Register')}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    doSubmit = () => {\r\n        // call the server\r\n        console.log('Submitted');\r\n    };\r\n}\r\n\r\nexport default RegistationForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Movies from './components/movies';\nimport MovieForm from './components/movieForm';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/movies/:id\" component={MovieForm}></Route>\n            <Route path=\"/registerForm\" component={RegisterForm}></Route>\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/movies/:id\" component={MovieForm}></Route>\n            <Route path=\"/movies\" component={Movies}></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect exact from=\"/\" to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/js/dist/collapse';\nimport 'font-awesome/css/font-awesome.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}